// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk91.proto

#ifndef PROTOBUF_sdk91_2eproto__INCLUDED
#define PROTOBUF_sdk91_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace sdk91 {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sdk91_2eproto();
void protobuf_AssignDesc_sdk91_2eproto();
void protobuf_ShutdownFile_sdk91_2eproto();

class LOGIN;

// ===================================================================

class LOGIN : public ::google::protobuf::Message {
 public:
  LOGIN();
  virtual ~LOGIN();

  LOGIN(const LOGIN& from);

  inline LOGIN& operator=(const LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOGIN& default_instance();

  void Swap(LOGIN* other);

  // implements Message ----------------------------------------------

  LOGIN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOGIN& from);
  void MergeFrom(const LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1 [default = 0];
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // optional int32 session_id = 2 [default = 0];
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 session_id() const;
  inline void set_session_id(::google::protobuf::int32 value);

  // optional int32 err = 3 [default = 0];
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 3;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // optional string params = 4 [default = ""];
  inline bool has_params() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params() const;
  inline void set_params(const ::std::string& value);
  inline void set_params(const char* value);
  inline void set_params(const char* value, size_t size);
  inline ::std::string* mutable_params();
  inline ::std::string* release_params();
  inline void set_allocated_params(::std::string* params);

  // optional int32 time = 5 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sdk91.LOGIN)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_params();
  inline void clear_has_params();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 session_id_;
  ::std::string* params_;
  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_sdk91_2eproto();
  friend void protobuf_AssignDesc_sdk91_2eproto();
  friend void protobuf_ShutdownFile_sdk91_2eproto();

  void InitAsDefaultInstance();
  static LOGIN* default_instance_;
};
// ===================================================================


// ===================================================================

// LOGIN

// optional int32 uid = 1 [default = 0];
inline bool LOGIN::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOGIN::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOGIN::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOGIN::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 LOGIN::uid() const {
  // @@protoc_insertion_point(field_get:sdk91.LOGIN.uid)
  return uid_;
}
inline void LOGIN::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:sdk91.LOGIN.uid)
}

// optional int32 session_id = 2 [default = 0];
inline bool LOGIN::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOGIN::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOGIN::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOGIN::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 LOGIN::session_id() const {
  // @@protoc_insertion_point(field_get:sdk91.LOGIN.session_id)
  return session_id_;
}
inline void LOGIN::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:sdk91.LOGIN.session_id)
}

// optional int32 err = 3 [default = 0];
inline bool LOGIN::has_err() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LOGIN::set_has_err() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LOGIN::clear_has_err() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LOGIN::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 LOGIN::err() const {
  // @@protoc_insertion_point(field_get:sdk91.LOGIN.err)
  return err_;
}
inline void LOGIN::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:sdk91.LOGIN.err)
}

// optional string params = 4 [default = ""];
inline bool LOGIN::has_params() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LOGIN::set_has_params() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LOGIN::clear_has_params() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LOGIN::clear_params() {
  if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_->clear();
  }
  clear_has_params();
}
inline const ::std::string& LOGIN::params() const {
  // @@protoc_insertion_point(field_get:sdk91.LOGIN.params)
  return *params_;
}
inline void LOGIN::set_params(const ::std::string& value) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(value);
  // @@protoc_insertion_point(field_set:sdk91.LOGIN.params)
}
inline void LOGIN::set_params(const char* value) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(value);
  // @@protoc_insertion_point(field_set_char:sdk91.LOGIN.params)
}
inline void LOGIN::set_params(const char* value, size_t size) {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  params_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:sdk91.LOGIN.params)
}
inline ::std::string* LOGIN::mutable_params() {
  set_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    params_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:sdk91.LOGIN.params)
  return params_;
}
inline ::std::string* LOGIN::release_params() {
  clear_has_params();
  if (params_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = params_;
    params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LOGIN::set_allocated_params(::std::string* params) {
  if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete params_;
  }
  if (params) {
    set_has_params();
    params_ = params;
  } else {
    clear_has_params();
    params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:sdk91.LOGIN.params)
}

// optional int32 time = 5 [default = 0];
inline bool LOGIN::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LOGIN::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LOGIN::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LOGIN::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 LOGIN::time() const {
  // @@protoc_insertion_point(field_get:sdk91.LOGIN.time)
  return time_;
}
inline void LOGIN::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:sdk91.LOGIN.time)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sdk91

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sdk91_2eproto__INCLUDED
