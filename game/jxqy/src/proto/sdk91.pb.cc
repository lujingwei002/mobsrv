// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk91.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sdk91.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sdk91 {

namespace {

const ::google::protobuf::Descriptor* LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LOGIN_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sdk91_2eproto() {
  protobuf_AddDesc_sdk91_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sdk91.proto");
  GOOGLE_CHECK(file != NULL);
  LOGIN_descriptor_ = file->message_type(0);
  static const int LOGIN_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, time_),
  };
  LOGIN_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LOGIN_descriptor_,
      LOGIN::default_instance_,
      LOGIN_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LOGIN, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LOGIN));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sdk91_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LOGIN_descriptor_, &LOGIN::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sdk91_2eproto() {
  delete LOGIN::default_instance_;
  delete LOGIN_reflection_;
}

void protobuf_AddDesc_sdk91_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013sdk91.proto\022\005sdk91\"a\n\005LOGIN\022\016\n\003uid\030\001 \001"
    "(\005:\0010\022\025\n\nsession_id\030\002 \001(\005:\0010\022\016\n\003err\030\003 \001("
    "\005:\0010\022\020\n\006params\030\004 \001(\t:\000\022\017\n\004time\030\005 \001(\005:\0010", 119);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sdk91.proto", &protobuf_RegisterTypes);
  LOGIN::default_instance_ = new LOGIN();
  LOGIN::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sdk91_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sdk91_2eproto {
  StaticDescriptorInitializer_sdk91_2eproto() {
    protobuf_AddDesc_sdk91_2eproto();
  }
} static_descriptor_initializer_sdk91_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LOGIN::kUidFieldNumber;
const int LOGIN::kSessionIdFieldNumber;
const int LOGIN::kErrFieldNumber;
const int LOGIN::kParamsFieldNumber;
const int LOGIN::kTimeFieldNumber;
#endif  // !_MSC_VER

LOGIN::LOGIN()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sdk91.LOGIN)
}

void LOGIN::InitAsDefaultInstance() {
}

LOGIN::LOGIN(const LOGIN& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sdk91.LOGIN)
}

void LOGIN::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = 0;
  session_id_ = 0;
  err_ = 0;
  params_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LOGIN::~LOGIN() {
  // @@protoc_insertion_point(destructor:sdk91.LOGIN)
  SharedDtor();
}

void LOGIN::SharedDtor() {
  if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete params_;
  }
  if (this != default_instance_) {
  }
}

void LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LOGIN_descriptor_;
}

const LOGIN& LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdk91_2eproto();
  return *default_instance_;
}

LOGIN* LOGIN::default_instance_ = NULL;

LOGIN* LOGIN::New() const {
  return new LOGIN;
}

void LOGIN::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LOGIN*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(uid_, session_id_);
    ZR_(err_, time_);
    if (has_params()) {
      if (params_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        params_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sdk91.LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session_id;
        break;
      }

      // optional int32 session_id = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_session_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_err;
        break;
      }

      // optional int32 err = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_params;
        break;
      }

      // optional string params = 4 [default = ""];
      case 4: {
        if (tag == 34) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params().data(), this->params().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "params");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional int32 time = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sdk91.LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sdk91.LOGIN)
  return false;
#undef DO_
}

void LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sdk91.LOGIN)
  // optional int32 uid = 1 [default = 0];
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional int32 session_id = 2 [default = 0];
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->session_id(), output);
  }

  // optional int32 err = 3 [default = 0];
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->err(), output);
  }

  // optional string params = 4 [default = ""];
  if (has_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->params(), output);
  }

  // optional int32 time = 5 [default = 0];
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sdk91.LOGIN)
}

::google::protobuf::uint8* LOGIN::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sdk91.LOGIN)
  // optional int32 uid = 1 [default = 0];
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // optional int32 session_id = 2 [default = 0];
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->session_id(), target);
  }

  // optional int32 err = 3 [default = 0];
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->err(), target);
  }

  // optional string params = 4 [default = ""];
  if (has_params()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params().data(), this->params().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->params(), target);
  }

  // optional int32 time = 5 [default = 0];
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sdk91.LOGIN)
  return target;
}

int LOGIN::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 uid = 1 [default = 0];
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional int32 session_id = 2 [default = 0];
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->session_id());
    }

    // optional int32 err = 3 [default = 0];
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err());
    }

    // optional string params = 4 [default = ""];
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->params());
    }

    // optional int32 time = 5 [default = 0];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LOGIN* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LOGIN*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LOGIN::MergeFrom(const LOGIN& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_params()) {
      set_params(from.params());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LOGIN::CopyFrom(const LOGIN& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LOGIN::IsInitialized() const {

  return true;
}

void LOGIN::Swap(LOGIN* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(session_id_, other->session_id_);
    std::swap(err_, other->err_);
    std::swap(params_, other->params_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LOGIN_descriptor_;
  metadata.reflection = LOGIN_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sdk91

// @@protoc_insertion_point(global_scope)
