// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task.proto

#ifndef PROTOBUF_task_2eproto__INCLUDED
#define PROTOBUF_task_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dbproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_task_2eproto();
void protobuf_AssignDesc_task_2eproto();
void protobuf_ShutdownFile_task_2eproto();

class Task;
class TaskData;

// ===================================================================

class Task : public ::google::protobuf::Message {
 public:
  Task();
  virtual ~Task();

  Task(const Task& from);

  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Task& default_instance();

  void Swap(Task* other);

  // implements Message ----------------------------------------------

  Task* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Task& from);
  void MergeFrom(const Task& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int32 value = 2;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::int32 value);
  inline void add_value(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:dbproto.Task)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static Task* default_instance_;
};
// -------------------------------------------------------------------

class TaskData : public ::google::protobuf::Message {
 public:
  TaskData();
  virtual ~TaskData();

  TaskData(const TaskData& from);

  inline TaskData& operator=(const TaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskData& default_instance();

  void Swap(TaskData* other);

  // implements Message ----------------------------------------------

  TaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskData& from);
  void MergeFrom(const TaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1 [default = 0];
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // repeated .dbproto.Task tasks = 2;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 2;
  inline const ::dbproto::Task& tasks(int index) const;
  inline ::dbproto::Task* mutable_tasks(int index);
  inline ::dbproto::Task* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::dbproto::Task >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbproto::Task >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:dbproto.TaskData)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dbproto::Task > tasks_;
  ::google::protobuf::int32 uid_;
  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static TaskData* default_instance_;
};
// ===================================================================


// ===================================================================

// Task

// optional int32 id = 1 [default = 0];
inline bool Task::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Task::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Task::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Task::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Task::id() const {
  // @@protoc_insertion_point(field_get:dbproto.Task.id)
  return id_;
}
inline void Task::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dbproto.Task.id)
}

// repeated int32 value = 2;
inline int Task::value_size() const {
  return value_.size();
}
inline void Task::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::int32 Task::value(int index) const {
  // @@protoc_insertion_point(field_get:dbproto.Task.value)
  return value_.Get(index);
}
inline void Task::set_value(int index, ::google::protobuf::int32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:dbproto.Task.value)
}
inline void Task::add_value(::google::protobuf::int32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:dbproto.Task.value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Task::value() const {
  // @@protoc_insertion_point(field_list:dbproto.Task.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Task::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:dbproto.Task.value)
  return &value_;
}

// -------------------------------------------------------------------

// TaskData

// optional int32 uid = 1 [default = 0];
inline bool TaskData::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskData::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskData::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 TaskData::uid() const {
  // @@protoc_insertion_point(field_get:dbproto.TaskData.uid)
  return uid_;
}
inline void TaskData::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:dbproto.TaskData.uid)
}

// repeated .dbproto.Task tasks = 2;
inline int TaskData::tasks_size() const {
  return tasks_.size();
}
inline void TaskData::clear_tasks() {
  tasks_.Clear();
}
inline const ::dbproto::Task& TaskData::tasks(int index) const {
  // @@protoc_insertion_point(field_get:dbproto.TaskData.tasks)
  return tasks_.Get(index);
}
inline ::dbproto::Task* TaskData::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:dbproto.TaskData.tasks)
  return tasks_.Mutable(index);
}
inline ::dbproto::Task* TaskData::add_tasks() {
  // @@protoc_insertion_point(field_add:dbproto.TaskData.tasks)
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbproto::Task >&
TaskData::tasks() const {
  // @@protoc_insertion_point(field_list:dbproto.TaskData.tasks)
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbproto::Task >*
TaskData::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:dbproto.TaskData.tasks)
  return &tasks_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dbproto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_task_2eproto__INCLUDED
