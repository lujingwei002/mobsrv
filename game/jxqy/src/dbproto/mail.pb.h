// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#ifndef PROTOBUF_mail_2eproto__INCLUDED
#define PROTOBUF_mail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dbproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mail_2eproto();
void protobuf_AssignDesc_mail_2eproto();
void protobuf_ShutdownFile_mail_2eproto();

class Mail;
class MailList;

// ===================================================================

class Mail : public ::google::protobuf::Message {
 public:
  Mail();
  virtual ~Mail();

  Mail(const Mail& from);

  inline Mail& operator=(const Mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail& default_instance();

  void Swap(Mail* other);

  // implements Message ----------------------------------------------

  Mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail& from);
  void MergeFrom(const Mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 uid = 2 [default = 0];
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // optional string uname = 3 [default = ""];
  inline bool has_uname() const;
  inline void clear_uname();
  static const int kUnameFieldNumber = 3;
  inline const ::std::string& uname() const;
  inline void set_uname(const ::std::string& value);
  inline void set_uname(const char* value);
  inline void set_uname(const char* value, size_t size);
  inline ::std::string* mutable_uname();
  inline ::std::string* release_uname();
  inline void set_allocated_uname(::std::string* uname);

  // optional int32 uptimetime = 4 [default = 0];
  inline bool has_uptimetime() const;
  inline void clear_uptimetime();
  static const int kUptimetimeFieldNumber = 4;
  inline ::google::protobuf::int32 uptimetime() const;
  inline void set_uptimetime(::google::protobuf::int32 value);

  // optional string title = 5 [default = ""];
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 5;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string text = 6 [default = ""];
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 6;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional int32 senderuid = 7 [default = 0];
  inline bool has_senderuid() const;
  inline void clear_senderuid();
  static const int kSenderuidFieldNumber = 7;
  inline ::google::protobuf::int32 senderuid() const;
  inline void set_senderuid(::google::protobuf::int32 value);

  // optional string senderuname = 8 [default = ""];
  inline bool has_senderuname() const;
  inline void clear_senderuname();
  static const int kSenderunameFieldNumber = 8;
  inline const ::std::string& senderuname() const;
  inline void set_senderuname(const ::std::string& value);
  inline void set_senderuname(const char* value);
  inline void set_senderuname(const char* value, size_t size);
  inline ::std::string* mutable_senderuname();
  inline ::std::string* release_senderuname();
  inline void set_allocated_senderuname(::std::string* senderuname);

  // @@protoc_insertion_point(class_scope:dbproto.Mail)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_uname();
  inline void clear_has_uname();
  inline void set_has_uptimetime();
  inline void clear_has_uptimetime();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_senderuid();
  inline void clear_has_senderuid();
  inline void set_has_senderuname();
  inline void clear_has_senderuname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 uid_;
  ::std::string* uname_;
  ::std::string* title_;
  ::google::protobuf::int32 uptimetime_;
  ::google::protobuf::int32 senderuid_;
  ::std::string* text_;
  ::std::string* senderuname_;
  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static Mail* default_instance_;
};
// -------------------------------------------------------------------

class MailList : public ::google::protobuf::Message {
 public:
  MailList();
  virtual ~MailList();

  MailList(const MailList& from);

  inline MailList& operator=(const MailList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailList& default_instance();

  void Swap(MailList* other);

  // implements Message ----------------------------------------------

  MailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailList& from);
  void MergeFrom(const MailList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dbproto.Mail mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::dbproto::Mail& mails(int index) const;
  inline ::dbproto::Mail* mutable_mails(int index);
  inline ::dbproto::Mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::dbproto::Mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::dbproto::Mail >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:dbproto.MailList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dbproto::Mail > mails_;
  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static MailList* default_instance_;
};
// ===================================================================


// ===================================================================

// Mail

// optional int32 id = 1 [default = 0];
inline bool Mail::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Mail::id() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.id)
  return id_;
}
inline void Mail::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:dbproto.Mail.id)
}

// optional int32 uid = 2 [default = 0];
inline bool Mail::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 Mail::uid() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.uid)
  return uid_;
}
inline void Mail::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:dbproto.Mail.uid)
}

// optional string uname = 3 [default = ""];
inline bool Mail::has_uname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mail::set_has_uname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mail::clear_has_uname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mail::clear_uname() {
  if (uname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uname_->clear();
  }
  clear_has_uname();
}
inline const ::std::string& Mail::uname() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.uname)
  return *uname_;
}
inline void Mail::set_uname(const ::std::string& value) {
  set_has_uname();
  if (uname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uname_ = new ::std::string;
  }
  uname_->assign(value);
  // @@protoc_insertion_point(field_set:dbproto.Mail.uname)
}
inline void Mail::set_uname(const char* value) {
  set_has_uname();
  if (uname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uname_ = new ::std::string;
  }
  uname_->assign(value);
  // @@protoc_insertion_point(field_set_char:dbproto.Mail.uname)
}
inline void Mail::set_uname(const char* value, size_t size) {
  set_has_uname();
  if (uname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uname_ = new ::std::string;
  }
  uname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dbproto.Mail.uname)
}
inline ::std::string* Mail::mutable_uname() {
  set_has_uname();
  if (uname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dbproto.Mail.uname)
  return uname_;
}
inline ::std::string* Mail::release_uname() {
  clear_has_uname();
  if (uname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uname_;
    uname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Mail::set_allocated_uname(::std::string* uname) {
  if (uname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uname_;
  }
  if (uname) {
    set_has_uname();
    uname_ = uname;
  } else {
    clear_has_uname();
    uname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dbproto.Mail.uname)
}

// optional int32 uptimetime = 4 [default = 0];
inline bool Mail::has_uptimetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Mail::set_has_uptimetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Mail::clear_has_uptimetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Mail::clear_uptimetime() {
  uptimetime_ = 0;
  clear_has_uptimetime();
}
inline ::google::protobuf::int32 Mail::uptimetime() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.uptimetime)
  return uptimetime_;
}
inline void Mail::set_uptimetime(::google::protobuf::int32 value) {
  set_has_uptimetime();
  uptimetime_ = value;
  // @@protoc_insertion_point(field_set:dbproto.Mail.uptimetime)
}

// optional string title = 5 [default = ""];
inline bool Mail::has_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Mail::set_has_title() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Mail::clear_has_title() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Mail::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Mail::title() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.title)
  return *title_;
}
inline void Mail::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:dbproto.Mail.title)
}
inline void Mail::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:dbproto.Mail.title)
}
inline void Mail::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dbproto.Mail.title)
}
inline ::std::string* Mail::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dbproto.Mail.title)
  return title_;
}
inline ::std::string* Mail::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Mail::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dbproto.Mail.title)
}

// optional string text = 6 [default = ""];
inline bool Mail::has_text() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Mail::set_has_text() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Mail::clear_has_text() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Mail::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& Mail::text() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.text)
  return *text_;
}
inline void Mail::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:dbproto.Mail.text)
}
inline void Mail::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:dbproto.Mail.text)
}
inline void Mail::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dbproto.Mail.text)
}
inline ::std::string* Mail::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dbproto.Mail.text)
  return text_;
}
inline ::std::string* Mail::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Mail::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dbproto.Mail.text)
}

// optional int32 senderuid = 7 [default = 0];
inline bool Mail::has_senderuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Mail::set_has_senderuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Mail::clear_has_senderuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Mail::clear_senderuid() {
  senderuid_ = 0;
  clear_has_senderuid();
}
inline ::google::protobuf::int32 Mail::senderuid() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.senderuid)
  return senderuid_;
}
inline void Mail::set_senderuid(::google::protobuf::int32 value) {
  set_has_senderuid();
  senderuid_ = value;
  // @@protoc_insertion_point(field_set:dbproto.Mail.senderuid)
}

// optional string senderuname = 8 [default = ""];
inline bool Mail::has_senderuname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Mail::set_has_senderuname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Mail::clear_has_senderuname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Mail::clear_senderuname() {
  if (senderuname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderuname_->clear();
  }
  clear_has_senderuname();
}
inline const ::std::string& Mail::senderuname() const {
  // @@protoc_insertion_point(field_get:dbproto.Mail.senderuname)
  return *senderuname_;
}
inline void Mail::set_senderuname(const ::std::string& value) {
  set_has_senderuname();
  if (senderuname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderuname_ = new ::std::string;
  }
  senderuname_->assign(value);
  // @@protoc_insertion_point(field_set:dbproto.Mail.senderuname)
}
inline void Mail::set_senderuname(const char* value) {
  set_has_senderuname();
  if (senderuname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderuname_ = new ::std::string;
  }
  senderuname_->assign(value);
  // @@protoc_insertion_point(field_set_char:dbproto.Mail.senderuname)
}
inline void Mail::set_senderuname(const char* value, size_t size) {
  set_has_senderuname();
  if (senderuname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderuname_ = new ::std::string;
  }
  senderuname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dbproto.Mail.senderuname)
}
inline ::std::string* Mail::mutable_senderuname() {
  set_has_senderuname();
  if (senderuname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    senderuname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dbproto.Mail.senderuname)
  return senderuname_;
}
inline ::std::string* Mail::release_senderuname() {
  clear_has_senderuname();
  if (senderuname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = senderuname_;
    senderuname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Mail::set_allocated_senderuname(::std::string* senderuname) {
  if (senderuname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete senderuname_;
  }
  if (senderuname) {
    set_has_senderuname();
    senderuname_ = senderuname;
  } else {
    clear_has_senderuname();
    senderuname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dbproto.Mail.senderuname)
}

// -------------------------------------------------------------------

// MailList

// repeated .dbproto.Mail mails = 1;
inline int MailList::mails_size() const {
  return mails_.size();
}
inline void MailList::clear_mails() {
  mails_.Clear();
}
inline const ::dbproto::Mail& MailList::mails(int index) const {
  // @@protoc_insertion_point(field_get:dbproto.MailList.mails)
  return mails_.Get(index);
}
inline ::dbproto::Mail* MailList::mutable_mails(int index) {
  // @@protoc_insertion_point(field_mutable:dbproto.MailList.mails)
  return mails_.Mutable(index);
}
inline ::dbproto::Mail* MailList::add_mails() {
  // @@protoc_insertion_point(field_add:dbproto.MailList.mails)
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dbproto::Mail >&
MailList::mails() const {
  // @@protoc_insertion_point(field_list:dbproto.MailList.mails)
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::dbproto::Mail >*
MailList::mutable_mails() {
  // @@protoc_insertion_point(field_mutable_list:dbproto.MailList.mails)
  return &mails_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dbproto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mail_2eproto__INCLUDED
